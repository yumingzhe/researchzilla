<!DOCTYPE hibernate-mapping PUBLIC
        "-//Hibernate/Hibernate Mapping DTD 3.0//EN"
        "http://www.hibernate.org/dtd/hibernate-mapping-3.0.dtd">
<hibernate-mapping>
    <class name="pojo.SiteUser" table="researchzilla_siteusers">
        <id name="uid" column="uid" type="java.lang.Integer">
            <generator class="native"/>
        </id>
        <property name="username" column="username" type="java.lang.String" length="20"/>
        <property name="password" column="password" type="java.lang.String" length="32"/>
        <property name="salt" column="salt" type="java.lang.String" length="8"/>
        <property name="active" column="active" type="boolean"/>
        <property name="banned" column="banned" type="boolean"/>
        <property name="email" column="email" type="java.lang.String" length="50"/>
        <property name="instituteId" column="instituteId" type="java.lang.String"/>
        <one-to-one name="userEntity" class="pojo.UserEntity" cascade="all"/>
        <one-to-one name="register" class="pojo.Register" lazy="false" cascade="all"/>
        <set name="activities" table="researchzilla_activity" inverse="false" cascade="persist" lazy="false">
            <key column="personId"/>
            <one-to-many class="pojo.Activity"/>
        </set>
        <set name="blogs" table="researchzilla_blogs" inverse="false" cascade="save-update" lazy="false">
            <key column="posterId"/>
            <one-to-many class="pojo.Blog"/>
        </set>
        <set name="files" table="researchzilla_file" inverse="true" cascade="save-update">
            <key column="ownerId"/>
            <one-to-many class="pojo.File"/>
        </set>
        <set name="groups" cascade="all" table="researchzilla_siteuser_group" lazy="false">
            <key column="siteuserId"/>
            <many-to-many class="pojo.Group" column="groupId" unique="true"/>
        </set>
        <!-- <join table="researchzilla_group_member">
            <key column="memberId"/>
            <many-to-one name="group" column="groupId" unique="true" not-null="false" class="pojo.Group"/>
        </join>-->
        <many-to-one name="group" class="pojo.Group" column="groupId"/>
    </class>
</hibernate-mapping>